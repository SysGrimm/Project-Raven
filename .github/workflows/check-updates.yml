name: Check for Updates

# Permissions needed for the workflow
permissions:
  actions: write   # Required to trigger other workflows
  contents: read   # Required to read repository content

on:
  # Check for updates twice daily
  schedule:
    - cron: '0 6,18 * * *'  # 6 AM and 6 PM UTC daily
    
  # Manual trigger
  workflow_dispatch:

jobs:
  check-libreelec:
    runs-on: ubuntu-latest
    outputs:
      update_available: ${{ steps.check.outputs.update_available }}
    steps:
    - name: Check LibreELEC version
      id: check
      run: |
        echo "🔍 Checking LibreELEC versions..."
        CURRENT=$(curl -s "https://api.github.com/repos/LibreELEC/LibreELEC.tv/releases/latest" | grep '"tag_name"' | sed -E 's/.*"tag_name": "([^"]+)".*/\1/')
        echo "📦 Latest LibreELEC version: $CURRENT"
        
        # Check our last release
        LAST_RELEASE=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/latest" | grep '"tag_name"' | sed -E 's/.*"tag_name": "([^"]+)".*/\1/' || echo "none")
        echo "🏷️ Our last release: $LAST_RELEASE"
        
        if [[ "$LAST_RELEASE" != *"$CURRENT"* ]]; then
          echo "🚀 New LibreELEC version available: $CURRENT"
          echo "update_available=true" >> $GITHUB_OUTPUT
        else
          echo "✅ LibreELEC version up to date"
          echo "update_available=false" >> $GITHUB_OUTPUT
        fi

  check-tailscale:
    runs-on: ubuntu-latest
    outputs:
      update_available: ${{ steps.check.outputs.update_available }}
    steps:
    - name: Check Tailscale version
      id: check
      run: |
        echo "🔍 Checking Tailscale versions..."
        CURRENT=$(curl -s "https://api.github.com/repos/tailscale/tailscale/releases/latest" | grep '"tag_name"' | sed -E 's/.*"tag_name": "v([^"]+)".*/\1/')
        echo "📦 Latest Tailscale version: $CURRENT"
        
        # Check our last release
        LAST_RELEASE=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/latest" | grep '"tag_name"' | sed -E 's/.*"tag_name": "([^"]+)".*/\1/' || echo "none")
        echo "🏷️ Our last release: $LAST_RELEASE"
        
        if [[ "$LAST_RELEASE" != *"$CURRENT"* ]]; then
          echo "🚀 New Tailscale version available: $CURRENT"
          echo "update_available=true" >> $GITHUB_OUTPUT
        else
          echo "✅ Tailscale version up to date"
          echo "update_available=false" >> $GITHUB_OUTPUT
        fi

  trigger-release:
    needs: [check-libreelec, check-tailscale]
    runs-on: ubuntu-latest
    if: needs.check-libreelec.outputs.update_available == 'true' || needs.check-tailscale.outputs.update_available == 'true'
    steps:
    - name: Trigger release if updates available
      uses: actions/github-script@v7
      with:
        script: |
          console.log('🚀 Updates detected, triggering automated release...');
          
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'automated-release.yml',
            ref: 'main'
          });
          
          console.log('✅ Automated release workflow triggered!');
